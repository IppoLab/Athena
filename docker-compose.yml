version: '3'

services:
  front:
    image: ippolab/athena-frontend
    container_name: athena_front
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.backend=athena-frontend"
      - "traefik.frontend.rule=Host:athena.${HOSTNAME}"
      - "traefik.port=80"
    networks:
      - web
  nginx:
    image: nginx:1.15.9-alpine
    container_name: athena_nginx
    restart: always
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static:/static
      - media:/media
    labels:
      - "traefik.enable=true"
      - "traefik.backend=athena-nginx"
      - "traefik.frontend.rule=Host:api.athena.${HOSTNAME};PathPrefix:/static,PathPrefix:/media"
      - "traefik.port=80"
    networks:
      - web
  back:
    image: ippolab/athena-backend
    container_name: athena_back
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - media:/app/media
      - static:/app/static
    labels:
      - "traefik.enable=true"
      - "traefik.backend=athena-backend"
      - "traefik.frontend.rule=Host:api.athena.${HOSTNAME}"
      - "traefik.port=8000"
    networks:
      - web
  db:
    image: postgres:11.2-alpine
    container_name: athena_postgre
    restart: always
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.backend=athena-postgre"
      - "traefik.frontend.rule=Host:"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - web
  adminer:
    image: adminer:4.7.1-standalone
    container_name: athena_adminer
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.backend=athena-adminer"
      - "traefik.frontend.rule=Host:adminer.athena.${HOSTNAME}"
      - "traefik.port=8080"
    networks:
      - web

volumes:
  postgres-data:
  media:
  static:

networks:
  web:
    external: true
